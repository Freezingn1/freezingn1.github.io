(function() {
    'use strict';

    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–ª–∞–≥–∏–Ω–∞
    const plugin = {
        name: 'tmdb_anime_lists',
        title: '–ê–Ω–∏–º–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏',
        icon: 'üéå',
        api_key: 'f83446fde4dacae2924b41ff789d2bb0', // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π –∫–ª—é—á
        lists: [
            {id: 146567, name: '–¢–æ–ø –∞–Ω–∏–º–µ-—Å–µ—Ä–∏–∞–ª—ã'} // –¢–µ—Å—Ç–æ–≤—ã–π —Å–ø–∏—Å–æ–∫
        ]
    };

    // –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –ø–ª–∞–≥–∏–Ω–∞
    function AnimePlugin() {
        this.initialized = false;
        this.network = new Lampa.Reguest();
    }

    AnimePlugin.prototype = {
        initialize: function() {
            if (this.initialized) return;
            this.initialized = true;
            
            // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö
            Lampa.Storage.add('anime_plugin', {
                load: this.loadList.bind(this)
            });
        },

        loadList: function(params) {
            return new Promise((resolve) => {
                const url = `https://api.themoviedb.org/3/list/${params.id}?api_key=${plugin.api_key}&language=ru`;
                
                console.log('–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º URL:', url); // –õ–æ–≥–∏—Ä—É–µ–º URL
                
                this.network.silent(url, (json) => {
                    console.log('–û—Ç–≤–µ—Ç –æ—Ç TMDB:', json); // –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
                    
                    if (!json || !json.results) { // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ results –≤–º–µ—Å—Ç–æ items
                        console.error('–û—à–∏–±–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–≤–µ—Ç–∞');
                        return resolve({results: [], more: false});
                    }

                    const items = json.results.map(item => {
                        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–µ URL –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                        const poster = item.poster_path 
                            ? Lampa.Utils.protocol() + 'image.tmdb.org/t/p/w300' + item.poster_path 
                            : '';
                        
                        const cover = item.backdrop_path 
                            ? Lampa.Utils.protocol() + 'image.tmdb.org/t/p/original' + item.backdrop_path 
                            : '';

                        // –û—Å–Ω–æ–≤–Ω—ã–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
                        return {
                            id: item.id,
                            type: item.media_type === 'movie' ? 'movie' : 'tv',
                            name: item.title || item.name,
                            title: item.title || item.name,
                            original_title: item.original_title || item.original_name || '',
                            poster: poster,
                            cover: cover,
                            description: item.overview || '',
                            year: (item.release_date || item.first_air_date || '').substring(0,4) || 0,
                            rating: item.vote_average ? Math.round(item.vote_average * 10)/10 : 0,
                            age: '16+',
                            genres: ['–∞–Ω–∏–º–µ'],
                            countries: ['JP']
                        };
                    });

                    console.log('–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤:', items.length);
                    resolve({results: items, more: false});
                });
            });
        }
    };

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–≥–∏–Ω–∞
    function startPlugin() {
        if (window.anime_plugin_initialized) return;
        window.anime_plugin_initialized = true;

        const animePlugin = new AnimePlugin();
        animePlugin.initialize();

        // –°–æ–∑–¥–∞–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø—É–Ω–∫—Ç –º–µ–Ω—é
        function createAndAddMenu() {
            const menu = $('.menu .menu__list').first();
            if (!menu.length) {
                setTimeout(createAndAddMenu, 500);
                return;
            }

            // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –ø—É–Ω–∫—Ç –µ—Å–ª–∏ –µ—Å—Ç—å
            menu.find(`[data-action="${plugin.name}"]`).remove();
            
            // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é
            const menuItem = $(`
                <li class="menu__item selector" data-action="${plugin.name}">
                    <div class="menu__ico">${plugin.icon}</div>
                    <div class="menu__text">${plugin.title}</div>
                </li>
            `);

            menuItem.on('hover:enter', function() {
                Lampa.Activity.push({
                    component: 'selector',
                    title: plugin.title,
                    items: plugin.lists.map(list => ({
                        title: list.name,
                        action: () => {
                            Lampa.Activity.push({
                                component: 'full',
                                title: list.name,
                                source: 'anime_plugin',
                                method: 'list',
                                params: {id: list.id},
                                card_type: 'default' // –í–∞–∂–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä
                            });
                        }
                    }))
                });
            });

            menu.prepend(menuItem);
            console.log('–ü—É–Ω–∫—Ç –º–µ–Ω—é –¥–æ–±–∞–≤–ª–µ–Ω');
        }

        // –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ
        createAndAddMenu();

        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏ –∫–∞–∂–¥–æ–º –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–µ–Ω—é
        Lampa.Listener.follow('app_menu', createAndAddMenu);
    }

    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–≥–∏–Ω
    if (window.appready) {
        startPlugin();
    } else {
        Lampa.Listener.follow('app', function(e) {
            if (e.type === 'ready') startPlugin();
        });
    }
})();