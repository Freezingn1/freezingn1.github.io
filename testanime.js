(function() {
    'use strict';

    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    const plugin = {
        name: 'anime_plugin',
        title: '–ê–Ω–∏–º–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏',
        icon: 'üéå',
        api_key: 'f83446fde4dacae2924b41ff789d2bb0', // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –∫–ª—é—á
        list_id: 146567 // ID —Å–ø–∏—Å–∫–∞ TMDB
    };

    // 1. –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Lampa
    function waitForLampa(callback) {
        if (window.Lampa && Lampa.Storage && Lampa.Activity) {
            console.log('Lampa API –≥–æ—Ç–æ–≤');
            callback();
        } else {
            console.log('–û–∂–∏–¥–∞–µ–º Lampa API...');
            setTimeout(() => waitForLampa(callback), 300);
        }
    }

    // 2. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö
    function registerSource() {
        console.log('–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö...');
        
        Lampa.Storage.add('anime_source', {
            load: function(params) {
                console.log('–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...');
                
                return new Promise((resolve) => {
                    const url = `https://api.themoviedb.org/3/list/${plugin.list_id}?api_key=${plugin.api_key}`;
                    console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å:', url);

                    Lampa.Reguest.json(url, (response) => {
                        console.log('–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç:', response);
                        
                        if (!response || !response.results) {
                            console.error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞');
                            return resolve({results: [], more: false});
                        }

                        const items = response.results.map(item => {
                            // –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è Lampa
                            return {
                                id: item.id,
                                type: item.media_type === 'movie' ? 'movie' : 'tv',
                                name: item.title || item.name,
                                title: item.title || item.name,
                                original_title: item.original_title || item.original_name,
                                poster: item.poster_path 
                                    ? 'https://image.tmdb.org/t/p/w300' + item.poster_path 
                                    : '',
                                cover: item.backdrop_path 
                                    ? 'https://image.tmdb.org/t/p/original' + item.backdrop_path 
                                    : '',
                                description: item.overview || '',
                                year: (item.release_date || item.first_air_date || '').substring(0,4) || 0,
                                rating: item.vote_average ? parseFloat(item.vote_average.toFixed(1)) : 0,
                                age: '16+',
                                genres: ['–∞–Ω–∏–º–µ'],
                                countries: ['JP']
                            };
                        });

                        console.log('–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤:', items.length);
                        resolve({results: items, more: false});
                    }, (error) => {
                        console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error);
                        resolve({results: [], more: false});
                    });
                });
            }
        });
    }

    // 3. –î–æ–±–∞–≤–ª—è–µ–º –ø—É–Ω–∫—Ç –º–µ–Ω—é —Å –ø–æ–ª–Ω–æ–π –æ—Ç–ª–∞–¥–∫–æ–π
    function addMenuButton() {
        console.log('–ü–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å –ø—É–Ω–∫—Ç –º–µ–Ω—é...');
        
        const menu = $('.menu .menu__list').first();
        if (!menu.length) {
            console.log('–ú–µ–Ω—é –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞...');
            setTimeout(addMenuButton, 500);
            return;
        }

        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –ø—É–Ω–∫—Ç –µ—Å–ª–∏ –µ—Å—Ç—å
        const oldItem = menu.find(`[data-action="${plugin.name}"]`);
        if (oldItem.length) {
            console.log('–£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é');
            oldItem.remove();
        }

        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø—É–Ω–∫—Ç
        console.log('–°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é');
        const menuItem = $(`
            <li class="menu__item selector" data-action="${plugin.name}">
                <div class="menu__ico">${plugin.icon}</div>
                <div class="menu__text">${plugin.title}</div>
            </li>
        `);

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ —Å –ø–æ–ª–Ω–æ–π –æ—Ç–ª–∞–¥–∫–æ–π
        menuItem.on('hover:enter', function() {
            console.log('–ö–ª–∏–∫ –ø–æ –ø—É–Ω–∫—Ç—É –º–µ–Ω—é –æ–±–Ω–∞—Ä—É–∂–µ–Ω');
            
            Lampa.Activity.push({
                component: 'full',
                title: plugin.title,
                source: 'anime_source',
                method: 'list',
                params: {},
                card_type: 'default',
                onReady: function() {
                    console.log('–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞');
                },
                onError: function(error) {
                    console.error('–û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:', error);
                }
            });
        });

        menu.prepend(menuItem);
        console.log('–ü—É–Ω–∫—Ç –º–µ–Ω—é —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω');
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    waitForLampa(() => {
        console.log('--- –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ü–õ–ê–ì–ò–ù–ê ---');
        registerSource();
        addMenuButton();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–∏ –∫–∞–∂–¥–æ–º –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–µ–Ω—é
        Lampa.Listener.follow('app_menu', function() {
            console.log('–û–±–Ω–æ–≤–ª—è–µ–º –º–µ–Ω—é...');
            addMenuButton();
        });
    });

    // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    function testPlugin() {
        console.log('--- –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï ---');
        console.log('Lampa:', !!window.Lampa);
        console.log('Lampa.Storage:', !!Lampa.Storage);
        console.log('Lampa.Activity:', !!Lampa.Activity);
        console.log('Lampa.Reguest:', !!Lampa.Reguest);
    }

    setTimeout(testPlugin, 3000);
})();