(function() {
    'use strict';

    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
    const plugin = {
        name: 'anime_plugin',
        title: '–ê–Ω–∏–º–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏',
        icon: 'üéå',
        api_key: 'f83446fde4dacae2924b41ff789d2bb0', // –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–ª—é—á
        list_id: 146567 // –ü—Ä–æ–≤–µ—Ä—å—Ç–µ ID —Å–ø–∏—Å–∫–∞
    };

    // 1. –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Lampa
    function waitForLampa(callback) {
        if (window.Lampa && Lampa.Storage && Lampa.Activity) {
            console.log('Lampa API –≥–æ—Ç–æ–≤');
            callback();
        } else {
            console.log('–û–∂–∏–¥–∞–µ–º Lampa API...');
            setTimeout(() => waitForLampa(callback), 300);
        }
    }

    // 2. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö
    function registerSource() {
        console.log('–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö...');
        
        Lampa.Storage.add('anime_source', {
            load: function(params) {
                console.log('–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞:', params);
                return new Promise((resolve) => {
                    const url = `https://api.themoviedb.org/3/list/${plugin.list_id}?api_key=${plugin.api_key}`;
                    console.log('–ó–∞–ø—Ä–æ—Å –∫ API:', url);

                    fetch(url)
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('–û—à–∏–±–∫–∞ HTTP: ' + response.status);
                            }
                            return response.json();
                        })
                        .then(data => {
                            console.log('–ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç API —á–µ—Ä–µ–∑ fetch:', data);
                            if (!data || !data.items) {
                                console.error('–û—à–∏–±–∫–∞: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –æ—Ç–≤–µ—Ç–µ');
                                return resolve({results: [], more: false});
                            }

                            const items = data.items.map(item => {
                                return {
                                    id: item.id,
                                    type: item.media_type === 'movie' ? 'movie' : 'tv',
                                    name: item.name || item.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è',
                                    title: item.name || item.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è',
                                    original_title: item.original_name || item.original_title || '',
                                    poster: item.poster_path 
                                        ? 'https://image.tmdb.org/t/p/w300' + item.poster_path 
                                        : 'https://via.placeholder.com/300x450?text=No+Poster',
                                    cover: item.backdrop_path 
                                        ? 'https://image.tmdb.org/t/p/original' + item.backdrop_path 
                                        : '',
                                    description: item.overview || '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
                                    year: parseInt((item.first_air_date || item.release_date || '0').substring(0, 4), 10) || 0,
                                    rating: item.vote_average ? parseFloat(item.vote_average.toFixed(1)) : 0,
                                    age: '16+',
                                    genres: item.genre_ids ? item.genre_ids.map(id => '–∞–Ω–∏–º–µ') : ['–∞–Ω–∏–º–µ'],
                                    countries: ['JP']
                                };
                            });

                            console.log('–û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã:', items);
                            resolve({results: items, more: false});
                        })
                        .catch(error => {
                            console.error('–û—à–∏–±–∫–∞ fetch:', error);
                            resolve({results: [], more: false});
                        });
                });
            }
        });
    }

    // 3. –î–æ–±–∞–≤–ª—è–µ–º –ø—É–Ω–∫—Ç –º–µ–Ω—é
    function addMenuButton() {
        console.log('–ü–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å –ø—É–Ω–∫—Ç –º–µ–Ω—é...');
        
        const menu = $('.menu .menu__list').first();
        if (!menu.length) {
            console.log('–ú–µ–Ω—é –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞...');
            setTimeout(addMenuButton, 500);
            return;
        }

        const oldItem = menu.find(`[data-action="${plugin.name}"]`);
        if (oldItem.length) {
            console.log('–£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é');
            oldItem.remove();
        }

        console.log('–°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é');
        const menuItem = $(`
            <li class="menu__item selector" data-action="${plugin.name}">
                <div class="menu__ico">${plugin.icon}</div>
                <div class="menu__text">${plugin.title}</div>
            </li>
        `);

        menuItem.on('hover:enter', function() {
            console.log('–ó–∞–ø—É—Å–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–ª—è:', plugin.title);
            Lampa.Activity.push({
                component: 'category_full',
                title: plugin.title,
                source: 'anime_source',
                method: 'list',
                params: {},
                onReady: function() {
                    console.log('–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
                },
                onError: function(error) {
                    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:', error);
                }
            });
        });

        menu.prepend(menuItem);
        console.log('–ü—É–Ω–∫—Ç –º–µ–Ω—é —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω');
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    waitForLampa(() => {
        console.log('--- –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ü–õ–ê–ì–ò–ù–ê ---');
        registerSource();
        addMenuButton();
        
        Lampa.Listener.follow('app_menu', function() {
            console.log('–û–±–Ω–æ–≤–ª—è–µ–º –º–µ–Ω—é...');
            addMenuButton();
        });

        Lampa.Listener.follow('component', (e) => {
            console.log('–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–µ–Ω:', e);
            if (e.component === 'category_full' && e.source === 'anime_source') {
                console.log('–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è anime_source –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
            }
        });
    });

    // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    function testPlugin() {
        console.log('--- –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï ---');
        console.log('Lampa:', !!window.Lampa);
        console.log('Lampa.Storage:', !!Lampa.Storage);
        console.log('Lampa.Activity:', !!Lampa.Activity);
    }

    setTimeout(testPlugin, 3000);
})();