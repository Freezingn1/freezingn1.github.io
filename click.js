(function() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ —Å–∫—Ä–∏–ø—Ç –≤ TV-—Ä–µ–∂–∏–º–µ
    const isTV = typeof Lampa !== 'undefined' && Lampa.Platform.tv();
    const TARGET_TAB_NAME = "CUB";
    const DELAY = {
        INITIAL: isTV ? 3000 : 1000, // –ù–∞ TV –∂–¥—ë–º –¥–æ–ª—å—à–µ
        CLICK: isTV ? 1000 : 300,
        INTERVAL: 2000
    };

    console.log(`üì∫ [${isTV ? 'TV' : 'Web'}] –ê–≤—Ç–æ–∫–ª–∏–∫–µ—Ä –¥–ª—è "${TARGET_TAB_NAME}" –∑–∞–ø—É—â–µ–Ω`);

    // TV-—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π –∫–ª–∏–∫
    function tvSafeClick(element) {
        if (!element) return;

        // 1. –§–æ–∫—É—Å–∏—Ä–æ–≤–∫–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è TV)
        element.focus();
        
        // 2. –ò–º–∏—Ç–∞—Ü–∏—è –Ω–∞–∂–∞—Ç–∏—è OK –Ω–∞ –ø—É–ª—å—Ç–µ
        const enterEvent = new KeyboardEvent('keydown', {
            key: 'Enter',
            code: 'Enter',
            bubbles: true
        });
        element.dispatchEvent(enterEvent);

        // 3. –û–±—ã—á–Ω—ã–π –∫–ª–∏–∫ (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
        setTimeout(() => element.click(), 200);
    }

    // –ü–æ–∏—Å–∫ –Ω—É–∂–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
    function findTab() {
        const tabs = document.querySelectorAll('.search-source.selector:not(.active)');
        for (const tab of tabs) {
            const title = tab.querySelector('.search-source__tab');
            if (title?.textContent?.trim() === TARGET_TAB_NAME) {
                return tab;
            }
        }
        return null;
    }

    // –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
    function checkAndClick() {
        const tab = findTab();
        if (tab) {
            console.log(`üîç –ù–∞–π–¥–µ–Ω–∞ –≤–∫–ª–∞–¥–∫–∞ "${TARGET_TAB_NAME}", –∫–ª–∏–∫–∞–µ–º...`);
            tvSafeClick(tab);
        }
    }

    // –ó–∞–ø—É—Å–∫
    setTimeout(checkAndClick, DELAY.INITIAL);
    setInterval(checkAndClick, DELAY.INTERVAL);

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Lampa TV API (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ)
    if (isTV) {
        Lampa.Listener.follow('app', (e) => {
            if (e.type === 'ready') checkAndClick(); // –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
        });
    }
})();